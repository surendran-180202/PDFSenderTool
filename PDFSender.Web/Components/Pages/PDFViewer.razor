@if (Show)
{
    <div class="MainContainer" id="MainContainer">
        <div id="toolBar" class="toolBar">
            <div class="Left">
                <button id="ZoomIN" class="btn-default" onclick="ZoomIn()">
                    <i class="fa fa-search-plus"></i>
                </button>
                <button id="ZoomOut" class="btn-default" onclick="ZoomOut()">
                    <i class="fa fa-search-minus"></i>
                </button>
            </div>
            <div class="Center">
                <button onclick="PDFPageDown()">
                    <i class="fa fa-chevron-left"></i>
                </button>
                <input type="number" value="1" id="PageNumber" onchange="PDFPageChange()"/><span>/</span><span id="AllPages"></span>
                <button onclick="PDFPageUp()">
                    <i class="fa fa-chevron-right"></i>
                </button>
                <select id="selectTag" onclick="PDFWidthChangeUsingSelectTag()">
                    <option value="0">Default</option>
                    <option value="1">50%</option>
                    <option value="2">100%</option>
                    <option value="3">200%</option>
                    <option value="4">400%</option>
                    <option value="5">FitPage</option>
                </select>
                <button onclick="PDFWidthChange()">
                    <i class="far fa-clone" id="ToggleIcon"></i>
                </button>
            </div>
            <div class="Right">
                <button id="downlode" onclick="DownloadFile()" class="btn-default">
                    <i class="fa fa-download"></i>
                </button>
                <button id="Close" @onclick="HideOverlay" class="btn-default">cancel</button>
            </div>
        </div>
        <div id="overlay" onwheel="AddMouseEvent(event)">
            <div class="classbackground" id="classbackground" @onclick="HideOverlay"></div>
            <div id="canvasContainer" class="canvasContainer"></div>
        </div>
    </div>
}

@code {
    [Parameter] public bool Show { get; set; }

    [Parameter] public string? PdfFilePath { get; set; }

    [Parameter] public byte[]? PdfByteData { get; set; }

    [Parameter] public EventCallback<bool> ShowChanged { get; set; }

    private void HideOverlay()
    {
        ShowChanged.InvokeAsync(false);

        PdfByteData = null;

        PdfFilePath = null;

        Js.InvokeVoidAsync("HideOverlay");
    }

    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);

        if (string.IsNullOrEmpty(PdfFilePath) && !Show) return;

        if (PdfByteData != null || PdfFilePath != null && Js != null)
        {
            var fileBytes = PdfByteData ?? File.ReadAllBytes(PdfFilePath);

            Js.InvokeVoidAsync("RenderPDF", fileBytes);
            Js.InvokeVoidAsync("ShowOverlay");
        }
    }
}